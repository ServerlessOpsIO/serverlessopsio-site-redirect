AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: ServerlessOps.io Site redirect

Parameters:
  Domain:
    Type: String
    Description: 'Application Platform'

  System:
    Type: String
    Description: 'Application System'

  Component:
    Type: String
    Description: 'Application Component'

  CodeBranch:
    Type: String
    Description: "Name of deployment branch"

  Hostname:
    Type: String
    Description: Site FQDN

  RedirectHostname:
    Type: String
    Description: Redirect site hostname

  DnsZoneId:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Route53 Hosted Zone ID

Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 5
    MemorySize: 128
    Environment:
      Variables:
        POWERTOOLS_SERVICE_NAME: !Ref AWS::StackName

Resources:

  RedirectFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: URL redirect function
      CodeUri: ./dist/handlers/Redirect
      Handler: function.handler
      Environment:
        Variables:
          REDIRECT_HOST: !Sub "https://${RedirectHostname}"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Format: "esm"
        MainFields: module,main # This is to help with ESM modules
        OutExtension:
          - .js=.mjs
        EntryPoints:
          - function.js

  RedirectFunctionnInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt RedirectFunction.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com

  # APIG
  SiteCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref Hostname
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref Hostname
          HostedZoneId: !Ref DnsZoneId

  RestApiLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/api-gateway/${AWS::StackName}"
      RetentionInDays: 7

  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref CodeBranch
      Domain:
        DomainName: !Ref Hostname
        CertificateArn: !Ref SiteCertificate
        Route53:
          HostedZoneId: !Ref DnsZoneId
        EndpointConfiguration: EDGE
      AccessLogSetting:
        DestinationArn: !GetAtt RestApiLogGroup.Arn
        Format: '$context.extendedRequestId $context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] "$context.httpMethod $context.resourcePath $context.protocol" $context.status $context.responseLength $context.requestId'
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          LoggingLevel: INFO
          MetricsEnabled: true
          DataTraceEnabled: false
      DefinitionBody:
        Fn::Transform:
          Name: "AWS::Include"
          Parameters:
            Location: "openapi.yaml"
